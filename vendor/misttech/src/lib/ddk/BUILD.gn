# Copyright 2025 Mist Tecnologia Ltda. All rights reserved.
# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/cpp/library_headers.gni")

group("tests") {
  testonly = true
  deps = [ "tests" ]
}

config("include") {
  include_dirs = [ "include" ]
}

# This needs to be static_library rather than source_set, as we need
# Unix linking rules to apply. This is so that only the object files
# corresponding to the used functions will be linked to the final binary.
static_library("ddk") {
  public = [
    "include/lib/ddk/binding_driver.h",
    "include/lib/ddk/binding_priv.h",
    "include/lib/ddk/debug.h",
    "include/lib/ddk/device.h",
    "include/lib/ddk/driver.h",
    "include/lib/ddk/hw/arch_ops.h",
    "include/lib/ddk/hw/inout.h",
    "include/lib/ddk/io-buffer.h",
    "include/lib/ddk/metadata.h",
    "include/lib/ddk/protodefs.h",
    "include/lib/ddk/trace/event.h",
  ]

  if (is_mistos) {
    sources = [
      #"io-buffer.c",
      "macros.h",
    ]
  }

  public_configs = [ ":include" ]

  public_deps = [
    # <ddk/io-buffer.h> has #include <zircon/syscalls.h>.
    "//sdk/lib/zbi-format",
    "//zircon/system/ulib/ddk-platform-defs",
  ]

  # TODO(https://fxbug.dev/42136089): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]

  #  ________  _________  ________  ________
  # |\   ____\|\___   ___\\   __  \|\   __  \
  # \ \  \___|\|___ \  \_\ \  \|\  \ \  \|\  \
  #  \ \_____  \   \ \  \ \ \  \\\  \ \   ____\
  #   \|____|\  \   \ \  \ \ \  \\\  \ \  \___|
  #     ____\_\  \   \ \__\ \ \_______\ \__\
  #    |\_________\   \|__|  \|_______|\|__|
  #    \|_________|
  #
  # New drivers should be written for DFv2. If you need to target a board stuck on DFv1,
  # it is acceptable to add an entry to this list.
  #
  # To remove items from the allowlist, please send a change to one of the OWNERS of
  # this file to remove an element from the visibility list below.
  #
  # Please allowlist entire directories rather than individual targets as it
  # requires less allowlist churn over time.
  visibility = [
    "//src/devices/board/lib/acpi:*",
    "//src/devices/pci/lib/pci:*",
    "//vendor/misttech/*",
    "//zircon/system/ulib/acpica:*",
    "//zircon/system/ulib/hwreg/test:*",
    "//zircon/vdso/zx:*",
  ]
}

library_headers("ddk-metadata-headers") {
  headers = [
    "ddk/metadata/bad-block.h",
    "ddk/metadata/buttons.h",
    "ddk/metadata/camera.h",
    "ddk/metadata/display.h",
    "ddk/metadata/nand.h",
    "ddk/metadata/test.h",
  ]

  #  ________  _________  ________  ________
  # |\   ____\|\___   ___\\   __  \|\   __  \
  # \ \  \___|\|___ \  \_\ \  \|\  \ \  \|\  \
  #  \ \_____  \   \ \  \ \ \  \\\  \ \   ____\
  #   \|____|\  \   \ \  \ \ \  \\\  \ \  \___|
  #     ____\_\  \   \ \__\ \ \_______\ \__\
  #    |\_________\   \|__|  \|_______|\|__|
  #    \|_________|
  #
  # New driver metadata should be defined in FIDL instead of C.
  #
  # To remove items from the allowlist, please send a change to one of the OWNERS of
  # this file to remove an element from the visibility list below.
  #
  # Please allowlist entire directories rather than individual targets as it
  # requires less allowlist churn over time.
  visibility = [
    "//sdk/lib/driver/devicetree/visitors/*",
    "//sdk/lib/driver_test_realm:*",
    "//src/camera/drivers/bus/aml_mipicsi:*",
    "//src/camera/drivers/sensors/imx227:*",
    "//src/devices/board/drivers/astro:*",
    "//src/devices/board/drivers/astro/post-init:*",
    "//src/devices/board/drivers/integration-test:*",
    "//src/devices/board/drivers/nelson:*",
    "//src/devices/board/drivers/nelson/post-init:*",
    "//src/devices/board/drivers/sherlock:*",
    "//src/devices/board/drivers/sherlock/post-init:*",
    "//src/devices/board/drivers/vim3:*",
    "//src/devices/bus/drivers/platform:*",
    "//src/devices/bus/drivers/platform/test:*",
    "//src/devices/clock/drivers/clock:*",
    "//src/devices/gpio/drivers/gpio:*",
    "//src/devices/i2c/drivers/intel-i2c:*",
    "//src/devices/nand/drivers/aml-spinand:*",
    "//src/devices/nand/drivers/nandpart:*",
    "//src/devices/nand/drivers/ram-nand:*",
    "//src/devices/power/drivers/power:*",
    "//src/devices/serial/drivers/ftdi:*",
    "//src/devices/serial/drivers/ftdi/test:*",
    "//src/devices/testing/driver-integration-test-shim:*",
    "//src/devices/usb/drivers/usb-peripheral:*",
    "//src/devices/usb/lib/usb:*",
    "//src/ui/input/drivers/buttons:*",
    "//src/ui/input/drivers/goodix:*",
    "//src/ui/input/drivers/hid-input-report:*",
    "//src/ui/input/lib/hid:*",
    "//src/ui/input/lib/hid-input-report:*",
    "//src/ui/light/drivers/aml-light:*",
  ]
}

library_headers("ddk-deprecated-binding-headers") {
  headers = [ "lib/ddk/binding.h" ]
  public_deps = [ ":ddk" ]
  visibility = [
    "//src/devices/board/lib/acpi/*",
    "//vendor/misttech/src/devices/board/drivers/x86/*",
  ]
}

library_headers("ddk-device-headers") {
  headers = [ "lib/ddk/device.h" ]
  public_deps = [ "//sdk/lib/driver/runtime:driver_runtime" ]
}

# Drivers should use //sdk/lib/mmio-ptr instead.
library_headers("ddk-deprecated-mmio-headers") {
  headers = [ "lib/ddk/hw/reg.h" ]
  visibility = [
    "//src/devices/bus/lib/virtio:*",
    "//zircon/third_party/dev/ethernet/e1000:*",
  ]
}

# Adds the metadata.h file to the SDK to be used with the driver compat
# library.
library_headers("ddk_metadata_only") {
  headers = [ "lib/ddk/metadata.h" ]
  public_deps = [ "//sdk/lib/zbi-format" ]
}

# Exports the metadata.h file to the SDK to support the transition
# to DFv2.
source_set("ddk_metadata") {
  public_configs = [ ":include" ]
  public = [ "include/lib/ddk/metadata.h" ]
  deps = [ ":ddk_metadata_only" ]
  public_deps = [ "//sdk/lib/zbi-format" ]
}

library_headers("ddk-hw-headers") {
  headers = [
    "lib/ddk/hw/arch_ops.h",
    "lib/ddk/hw/inout.h",
  ]
}
