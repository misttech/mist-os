// Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library linux;

type statx = struct {};

@no_protocol_prefix
@transport("Syscall")
closed protocol Syscall {
    // #0, SYSCALL_DEFINE3(read, unsigned int, fd, char __user *, buf, size_t, count)
    strict Read(resource struct {
        fd uint32;
        @out
        buf experimental_pointer<uchar>;
        count uint64;
    }) -> () error int64;

    // #1, SYSCALL_DEFINE3(write, unsigned int, fd, const char __user *, buf, size_t, count)
    strict Write(resource struct {
        fd uint32;
        @in
        buf experimental_pointer<uchar>;
        count uint64;
    }) -> () error int64;

    // #2, SYSCALL_DEFINE3(open, const char __user *, filename, int, flags, umode_t, mode)
    strict Open(resource struct {
        @in
        filename experimental_pointer<uchar>;
        flags int32;
        mode uint16;
    }) -> () error int64;

    // #3, SYSCALL_DEFINE1(close, unsigned int, fd)
    strict Close(resource struct {
        fd uint32;
    }) -> () error int64;

    ///STUB 4
    strict Stat() -> () error int64;
    ///STUB 5
    strict Fstat() -> () error int64;
    ///STUB 6
    strict Lstat() -> () error int64;
    ///STUB 7
    strict Poll() -> () error int64;
    ///STUB 8
    strict Lseek() -> () error int64;

    // #9, SYSCALL_DEFINE6(mmap, unsigned long, addr, unsigned long, len, unsigned long, prot, unsigned long, flags, unsigned long, fd, unsigned long, off)
    strict Mmap(resource struct {
        addr uint64;
        len uint64;
        prot uint64;
        flags uint64;
        fd uint64;
        off uint64;
    }) -> () error int64;

    // #10, SYSCALL_DEFINE3(mprotect, unsigned long, start, size_t, len, unsigned long, prot)
    strict Mprotect(resource struct {
        start uint64;
        len usize64;
        prot uint64;
    }) -> () error int64;

    // #11, SYSCALL_DEFINE2(munmap, unsigned long, addr, size_t, len)
    strict Munmap(resource struct {
        addr uint64;
        len usize64;
    }) -> () error int64;

    // #12, SYSCALL_DEFINE1(brk, unsigned long, brk)
    strict Brk(resource struct {
        brk uint64;
    }) -> () error int64;

    ///STUB 13
    strict RtSigaction() -> () error int64;
    ///STUB 14
    strict RtSigprocmask() -> () error int64;
    ///STUB 15
    strict RtSigreturn() -> () error int64;
    ///STUB 16
    strict Ioctl() -> () error int64;
    ///STUB 17
    strict Pread64() -> () error int64;
    ///STUB 18
    strict Pwrite64() -> () error int64;
    ///STUB 19
    strict Readv() -> () error int64;
    ///STUB 20
    strict Writev() -> () error int64;
    ///STUB 21
    strict Access() -> () error int64;
    ///STUB 22
    strict Pipe() -> () error int64;
    ///STUB 23
    strict Select() -> () error int64;

    // #24, SYSCALL_DEFINE0(sched_yield)
    strict SchedYield() -> () error int64;

    ///STUB 25
    strict Mremap() -> () error int64;
    ///STUB 26
    strict Msync() -> () error int64;
    ///STUB 27
    strict Mincore() -> () error int64;
    ///STUB 28
    strict Madvise() -> () error int64;
    ///STUB 29
    strict Shmget() -> () error int64;
    ///STUB 30
    strict Shmat() -> () error int64;
    ///STUB 31
    strict Shmctl() -> () error int64;
    ///STUB 32
    strict Dup() -> () error int64;
    ///STUB 33
    strict Dup2() -> () error int64;
    ///STUB 34
    strict Pause() -> () error int64;
    ///STUB 35
    strict Nanosleep() -> () error int64;
    ///STUB 36
    strict Getitimer() -> () error int64;
    ///STUB 37
    strict Alarm() -> () error int64;
    ///STUB 38
    strict Setitimer() -> () error int64;

    // #39, SYSCALL_DEFINE0(getpid)
    strict Getpid() -> () error int64;

    ///STUB 40
    strict Sendfile() -> () error int64;
    ///STUB 41
    strict Socket() -> () error int64;
    ///STUB 42
    strict Connect() -> () error int64;
    ///STUB 43
    strict Accept() -> () error int64;
    ///STUB 44
    strict Sendto() -> () error int64;
    ///STUB 45
    strict Recvfrom() -> () error int64;
    ///STUB 46
    strict Sendmsg() -> () error int64;
    ///STUB 47
    strict Recvmsg() -> () error int64;
    ///STUB 48
    strict Shutdown() -> () error int64;
    ///STUB 49
    strict Bind() -> () error int64;
    ///STUB 50
    strict Listen() -> () error int64;
    ///STUB 51
    strict Getsockname() -> () error int64;
    ///STUB 52
    strict Getpeername() -> () error int64;
    ///STUB 53
    strict Socketpair() -> () error int64;
    ///STUB 54
    strict Setsockopt() -> () error int64;
    ///STUB 55
    strict Getsockopt() -> () error int64;

    // #56, SYSCALL_DEFINE5(clone, unsigned long, clone_flags, unsigned long, newsp, int __user *, parent_tidptr, int __user *, child_tidptr, unsigned long, tls)
    strict Clone(resource struct {
        clone_flags uint64;
        newsp uint64;
        @out
        parent_tidptr int32;
        @out
        child_tidptr int32;
        tls uint64;
    }) -> () error int64;

    // #57, SYSCALL_DEFINE0(fork)
    strict Fork() -> () error int64;

    // #58, SYSCALL_DEFINE0(vfork)
    strict Vfork() -> () error int64;
    
    ///STUB 59
    strict Execve() -> () error int64;

    // #60, SYSCALL_DEFINE1(exit, int, error_code)
    strict Exit(resource struct {
        error_code int32;
    }) -> () error int64;

    ///STUB 61
    strict Wait4() -> () error int64;
    ///STUB 62
    strict Kill() -> () error int64;
    ///STUB 63
    strict Uname() -> () error int64;
    ///STUB 64
    strict Semget() -> () error int64;
    ///STUB 65
    strict Semop() -> () error int64;
    ///STUB 66
    strict Semctl() -> () error int64;
    ///STUB 67
    strict Shmdt() -> () error int64;
    ///STUB 68
    strict Msgget() -> () error int64;
    ///STUB 69
    strict Msgsnd() -> () error int64;
    ///STUB 70
    strict Msgrcv() -> () error int64;
    ///STUB 71
    strict Msgctl() -> () error int64;
    ///STUB 72
    strict Fcntl() -> () error int64;
    ///STUB 73
    strict Flock() -> () error int64;
    ///STUB 74
    strict Fsync() -> () error int64;
    ///STUB 75
    strict Fdatasync() -> () error int64;
    ///STUB 76
    strict Truncate() -> () error int64;
    ///STUB 77
    strict Ftruncate() -> () error int64;
    ///STUB 78
    strict Getdents() -> () error int64;
    ///STUB 79
    strict Getcwd() -> () error int64;
    ///STUB 80
    strict Chdir() -> () error int64;
    ///STUB 81
    strict Fchdir() -> () error int64;
    ///STUB 82
    strict Rename() -> () error int64;
    ///STUB 83
    strict Mkdir() -> () error int64;
    ///STUB 84
    strict Rmdir() -> () error int64;
    ///STUB 85
    strict Creat() -> () error int64;
    ///STUB 86
    strict Link() -> () error int64;
    ///STUB 87
    strict Unlink() -> () error int64;
    ///STUB 88
    strict Symlink() -> () error int64;
    ///STUB 89
    strict Readlink() -> () error int64;
    ///STUB 90
    strict Chmod() -> () error int64;
    ///STUB 91
    strict Fchmod() -> () error int64;
    ///STUB 92
    strict Chown() -> () error int64;
    ///STUB 93
    strict Fchown() -> () error int64;
    ///STUB 94
    strict Lchown() -> () error int64;
    ///STUB 95
    strict Umask() -> () error int64;
    ///STUB 96
    strict Gettimeofday() -> () error int64;
    ///STUB 97
    strict Getrlimit() -> () error int64;
    ///STUB 98
    strict Getrusage() -> () error int64;
    ///STUB 99
    strict Sysinfo() -> () error int64;
    ///STUB 100
    strict Times() -> () error int64;
    ///STUB 101
    strict Ptrace() -> () error int64;

    // #102, SYSCALL_DEFINE0(getuid)
    strict Getuid() -> () error int64;

    ///STUB 103
    strict Syslog() -> () error int64;

    // #104, SYSCALL_DEFINE0(getgid)
    strict Getgid() -> () error int64;

    ///STUB 105
    strict Setuid() -> () error int64;
    ///STUB 106
    strict Setgid() -> () error int64;

    // #107, SYSCALL_DEFINE0(geteuid)
    strict Geteuid() -> () error int64;

    // #108, SYSCALL_DEFINE0(getegid)
    strict Getegid() -> () error int64;

    ///STUB 109
    strict Setpgid() -> () error int64;

    // #110, SYSCALL_DEFINE0(getppid)
    strict Getppid() -> () error int64;

    // #111, SYSCALL_DEFINE0(getpgrp)
    strict Getpgrp() -> () error int64;

    ///STUB 112
    strict Setsid() -> () error int64;
    ///STUB 113
    strict Setreuid() -> () error int64;
    ///STUB 114
    strict Setregid() -> () error int64;
    ///STUB 115
    strict Getgroups() -> () error int64;
    ///STUB 116
    strict Setgroups() -> () error int64;
    ///STUB 117
    strict Setresuid() -> () error int64;
    ///STUB 118
    strict Getresuid() -> () error int64;
    ///STUB 119
    strict Setresgid() -> () error int64;
    ///STUB 120
    strict Getresgid() -> () error int64;

    // #121, SYSCALL_DEFINE1(getpgid, pid_t, pid)
    strict Getpgid(resource struct {
        pid int32;
    }) -> () error int64;

    ///STUB 122
    strict Setfsuid() -> () error int64;
    ///STUB 123
    strict Setfsgid() -> () error int64;
    ///STUB 124
    strict Getsid() -> () error int64;
    ///STUB 125
    strict Capget() -> () error int64;
    ///STUB 126
    strict Capset() -> () error int64;
    ///STUB 127
    strict RtSigpending() -> () error int64;
    ///STUB 128
    strict RtSigtimedwait() -> () error int64;
    ///STUB 129
    strict RtSigqueueinfo() -> () error int64;
    ///STUB 130
    strict RtSigsuspend() -> () error int64;
    ///STUB 131
    strict Sigaltstack() -> () error int64;
    ///STUB 132
    strict Utime() -> () error int64;
    ///STUB 133
    strict Mknod() -> () error int64;
    ///STUB 134
    strict Uselib() -> () error int64;
    ///STUB 135
    strict Personality() -> () error int64;
    ///STUB 136
    strict Ustat() -> () error int64;
    ///STUB 137
    strict Statfs() -> () error int64;
    ///STUB 138
    strict Fstatfs() -> () error int64;
    ///STUB 139
    strict Sysfs() -> () error int64;
    ///STUB 140
    strict Getpriority() -> () error int64;
    ///STUB 141
    strict Setpriority() -> () error int64;
    ///STUB 142
    strict SchedSetparam() -> () error int64;
    ///STUB 143
    strict SchedGetparam() -> () error int64;
    ///STUB 144
    strict SchedSetscheduler() -> () error int64;
    ///STUB 145
    strict SchedGetscheduler() -> () error int64;
    ///STUB 146
    strict SchedGetPriorityMax() -> () error int64;
    ///STUB 147
    strict SchedGetPriorityMin() -> () error int64;
    ///STUB 148
    strict SchedRrGetInterval() -> () error int64;
    ///STUB 149
    strict Mlock() -> () error int64;
    ///STUB 150
    strict Munlock() -> () error int64;
    ///STUB 151
    strict Mlockall() -> () error int64;
    ///STUB 152
    strict Munlockall() -> () error int64;
    ///STUB 153
    strict Vhangup() -> () error int64;
    ///STUB 154
    strict ModifyLdt() -> () error int64;
    ///STUB 155
    strict PivotRoot() -> () error int64;
    ///STUB 156 Not Implemented syscall
    strict Ni_156() -> () error int64;

    // #157, SYSCALL_DEFINE5(prctl, int, option, unsigned long, arg2, unsigned long, arg3, unsigned long, arg4, unsigned long, arg5)
    strict Prctl(resource struct {
        option int32;
        arg2 uint64;
        arg3 uint64;
        arg4 uint64;
        arg5 uint64;
    }) -> () error int64;

    // #158, SYSCALL_DEFINE2(arch_prctl, int, option, unsigned long, arg2)
    strict ArchPrctl(resource struct {
        option int32;
        arg2 uint64;
    }) -> () error int64;

    ///STUB 159
    strict Adjtimex() -> () error int64;
    ///STUB 160
    strict Setrlimit() -> () error int64;
    ///STUB 161
    strict Chroot() -> () error int64;
    ///STUB 162
    strict Sync() -> () error int64;
    ///STUB 163
    strict Acct() -> () error int64;
    ///STUB 164
    strict Settimeofday() -> () error int64;
    ///STUB 165
    strict Mount() -> () error int64;
    ///STUB 166
    strict Umount2() -> () error int64;
    ///STUB 167
    strict Swapon() -> () error int64;
    ///STUB 168
    strict Swapoff() -> () error int64;
    ///STUB 169
    strict Reboot() -> () error int64;
    ///STUB 170
    strict Sethostname() -> () error int64;
    ///STUB 171
    strict Setdomainname() -> () error int64;
    ///STUB 172
    strict Iopl() -> () error int64;
    ///STUB 173
    strict Ioperm() -> () error int64;
    ///STUB 174
    strict CreateModule() -> () error int64;
    ///STUB 175
    strict InitModule() -> () error int64;
    ///STUB 176
    strict DeleteModule() -> () error int64;
    ///STUB 177
    strict GetKernelSyms() -> () error int64;
    ///STUB 178
    strict QueryModule() -> () error int64;
    ///STUB 179
    strict Quotactl() -> () error int64;
    ///STUB 180
    strict Nfsservctl() -> () error int64;
    ///STUB 181
    strict Getpmsg() -> () error int64;
    ///STUB 182
    strict Putpmsg() -> () error int64;
    ///STUB 183
    strict AfsSyscall() -> () error int64;
    ///STUB 184
    strict Tuxcall() -> () error int64;
    ///STUB 185
    strict Security() -> () error int64;

    // #186, SYSCALL_DEFINE0(gettid)
    strict Gettid() -> () error int64;

    ///STUB 187
    strict Readahead() -> () error int64;
    ///STUB 188
    strict Setxattr() -> () error int64;
    ///STUB 189
    strict Lsetxattr() -> () error int64;
    ///STUB 190
    strict Fsetxattr() -> () error int64;
    ///STUB 191
    strict Getxattr() -> () error int64;
    ///STUB 192
    strict Lgetxattr() -> () error int64;
    ///STUB 193
    strict Fgetxattr() -> () error int64;
    ///STUB 194
    strict Listxattr() -> () error int64;
    ///STUB 195
    strict Llistxattr() -> () error int64;
    ///STUB 196
    strict Flistxattr() -> () error int64;
    ///STUB 197
    strict Removexattr() -> () error int64;
    ///STUB 198
    strict Lremovexattr() -> () error int64;
    ///STUB 199
    strict Fremovexattr() -> () error int64;
    ///STUB 200
    strict Tkill() -> () error int64;
    ///STUB 201
    strict Time() -> () error int64;
    ///STUB 202
    strict Futex() -> () error int64;
    ///STUB 203
    strict SchedSetaffinity() -> () error int64;
    ///STUB 204
    strict SchedGetaffinity() -> () error int64;
    ///STUB 205
    strict SetThreadArea() -> () error int64;
    ///STUB 206
    strict IoSetup() -> () error int64;
    ///STUB 207
    strict IoDestroy() -> () error int64;
    ///STUB 208
    strict IoGetevents() -> () error int64;
    ///STUB 209
    strict IoSubmit() -> () error int64;
    ///STUB 210
    strict IoCancel() -> () error int64;
    ///STUB 211
    strict GetThreadArea() -> () error int64;
    ///STUB 212
    strict LookupDcookie() -> () error int64;
    ///STUB 213
    strict EpollCreate() -> () error int64;
    ///STUB 214
    strict EpollCtlOld() -> () error int64;
    ///STUB 215
    strict EpollWaitOld() -> () error int64;
    ///STUB 216
    strict RemapFilePages() -> () error int64;
    ///STUB 217
    strict Getdents64() -> () error int64;
    ///STUB 218
    strict SetTidAddress() -> () error int64;
    ///STUB 219
    strict RestartSyscall() -> () error int64;
    ///STUB 220
    strict Semtimedop() -> () error int64;
    ///STUB 221
    strict Fadvise64() -> () error int64;
    ///STUB 222
    strict TimerCreate() -> () error int64;
    ///STUB 223
    strict TimerSettime() -> () error int64;
    ///STUB 224
    strict TimerGettime() -> () error int64;
    ///STUB 225
    strict TimerGetoverrun() -> () error int64;
    ///STUB 226
    strict TimerDelete() -> () error int64;
    ///STUB 227
    strict ClockSettime() -> () error int64;
    ///STUB 228
    strict ClockGettime() -> () error int64;
    ///STUB 229
    strict ClockGetres() -> () error int64;
    ///STUB 230
    strict ClockNanosleep() -> () error int64;
    ///STUB 231
    strict ExitGroup() -> () error int64;
    ///STUB 232
    strict EpollWait() -> () error int64;
    ///STUB 233
    strict EpollCtl() -> () error int64;
    ///STUB 234
    strict Tgkill() -> () error int64;
    ///STUB 235
    strict Utimes() -> () error int64;
    ///STUB 236
    strict Vserver() -> () error int64;
    ///STUB 237
    strict Mbind() -> () error int64;
    ///STUB 238
    strict SetMempolicy() -> () error int64;
    ///STUB 239
    strict GetMempolicy() -> () error int64;
    ///STUB 240
    strict MqOpen() -> () error int64;
    ///STUB 241
    strict MqUnlink() -> () error int64;
    ///STUB 242
    strict MqTimedsend() -> () error int64;
    ///STUB 243
    strict MqTimedreceive() -> () error int64;
    ///STUB 244
    strict MqNotify() -> () error int64;
    ///STUB 245
    strict MqGetsetattr() -> () error int64;
    ///STUB 246
    strict KexecLoad() -> () error int64;
    ///STUB 247
    strict Waitid() -> () error int64;
    ///STUB 248
    strict AddKey() -> () error int64;
    ///STUB 249
    strict RequestKey() -> () error int64;
    ///STUB 250
    strict Keyctl() -> () error int64;
    ///STUB 251
    strict IoprioSet() -> () error int64;
    ///STUB 252
    strict IoprioGet() -> () error int64;
    ///STUB 253
    strict InotifyInit() -> () error int64;
    ///STUB 254
    strict InotifyAddWatch() -> () error int64;
    ///STUB 255
    strict InotifyRmWatch() -> () error int64;
    ///STUB 256
    strict MigratePages() -> () error int64;
    ///STUB 257
    strict Openat() -> () error int64;
    ///STUB 258
    strict Mkdirat() -> () error int64;
    ///STUB 259
    strict Mknodat() -> () error int64;
    ///STUB 260
    strict Fchownat() -> () error int64;
    ///STUB 261
    strict Futimesat() -> () error int64;
    ///STUB 262
    strict Newfstatat() -> () error int64;
    ///STUB 263
    strict Unlinkat() -> () error int64;
    ///STUB 264
    strict Renameat() -> () error int64;
    ///STUB 265
    strict Linkat() -> () error int64;
    ///STUB 266
    strict Symlinkat() -> () error int64;
    ///STUB 267
    strict Readlinkat() -> () error int64;
    ///STUB 268
    strict Fchmodat() -> () error int64;
    ///STUB 269
    strict Faccessat() -> () error int64;
    ///STUB 270
    strict Pselect6() -> () error int64;
    ///STUB 271
    strict Ppoll() -> () error int64;
    ///STUB 272
    strict Unshare() -> () error int64;
    ///STUB 273
    strict SetRobustList() -> () error int64;
    ///STUB 274
    strict GetRobustList() -> () error int64;
    ///STUB 275
    strict Splice() -> () error int64;
    ///STUB 276
    strict Tee() -> () error int64;
    ///STUB 277
    strict SyncFileRange() -> () error int64;
    ///STUB 278
    strict Vmsplice() -> () error int64;
    ///STUB 279
    strict MovePages() -> () error int64;
    ///STUB 280
    strict Utimensat() -> () error int64;
    ///STUB 281
    strict EpollPwait() -> () error int64;
    ///STUB 282
    strict Signalfd() -> () error int64;
    ///STUB 283
    strict TimerfdCreate() -> () error int64;
    ///STUB 284
    strict Eventfd() -> () error int64;
    ///STUB 285
    strict Fallocate() -> () error int64;
    ///STUB 286
    strict TimerfdSettime() -> () error int64;
    ///STUB 287
    strict TimerfdGettime() -> () error int64;
    ///STUB 288
    strict Accept4() -> () error int64;
    ///STUB 289
    strict Signalfd4() -> () error int64;
    ///STUB 290
    strict Eventfd2() -> () error int64;
    ///STUB 291
    strict EpollCreate1() -> () error int64;
    ///STUB 292
    strict Dup3() -> () error int64;
    ///STUB 293
    strict Pipe2() -> () error int64;
    ///STUB 294
    strict InotifyInit1() -> () error int64;
    ///STUB 295
    strict Preadv() -> () error int64;
    ///STUB 296
    strict Pwritev() -> () error int64;
    ///STUB 297
    strict RtTgsigqueueinfo() -> () error int64;
    ///STUB 298
    strict PerfEventOpen() -> () error int64;
    ///STUB 299
    strict Recvmmsg() -> () error int64;
    ///STUB 300
    strict FanotifyInit() -> () error int64;
    ///STUB 301
    strict FanotifyMark() -> () error int64;
    ///STUB 302
    strict Prlimit64() -> () error int64;
    ///STUB 303
    strict NameToHandleAt() -> () error int64;
    ///STUB 304
    strict OpenByHandleAt() -> () error int64;
    ///STUB 305
    strict ClockAdjtime() -> () error int64;
    ///STUB 306
    strict Syncfs() -> () error int64;
    ///STUB 307
    strict Sendmmsg() -> () error int64;
    ///STUB 308
    strict Setns() -> () error int64;
    ///STUB 309
    strict Getcpu() -> () error int64;
    ///STUB 310
    strict ProcessVmReadv() -> () error int64;
    ///STUB 311
    strict ProcessVmWritev() -> () error int64;
    ///STUB 312
    strict Kcmp() -> () error int64;
    ///STUB 313
    strict FinitModule() -> () error int64;
    ///STUB 314
    strict SchedSetattr() -> () error int64;
    ///STUB 315
    strict SchedGetattr() -> () error int64;
    ///STUB 316
    strict Renameat2() -> () error int64;
    ///STUB 317
    strict Seccomp() -> () error int64;

    // #318, SYSCALL_DEFINE3(getrandom, char __user *, ubuf, size_t, len, unsigned int, flags)
    strict Getrandom(resource struct {
        @out
        buf experimental_pointer<uchar>;
        len uint64;
        flags uint32;
    }) -> () error int64;

    ///STUB 319
    strict MemfdCreate() -> () error int64;
    ///STUB 320
    strict KexecFileLoad() -> () error int64;
    ///STUB 321
    strict Bpf() -> () error int64;
    ///STUB 322
    strict Execveat() -> () error int64;
    ///STUB 323
    strict Userfaultfd() -> () error int64;
    ///STUB 324
    strict Membarrier() -> () error int64;
    ///STUB 325
    strict Mlock2() -> () error int64;
    ///STUB 326
    strict CopyFileRange() -> () error int64;
    ///STUB 327
    strict Preadv2() -> () error int64;
    ///STUB 328
    strict Pwritev2() -> () error int64;
    ///STUB 329
    strict PkeyMprotect() -> () error int64;
    ///STUB 330
    strict PkeyAlloc() -> () error int64;
    ///STUB 331
    strict PkeyFree() -> () error int64;

    // #332 SYSCALL_DEFINE5(statx, int, dfd, const char __user *, filename, unsigned, flags, unsigned int, mask, struct statx __user *, buffer)
    strict Statx(resource struct {
        dfd int32;
        @in
        filename experimental_pointer<uchar>;
        flags uint32;
        mask uint32;
        @out
        buffer experimental_pointer<statx>;
    }) -> () error int64;

    ///STUB 333
    strict IoPgetevents() -> () error int64;
    ///STUB 334
    strict Rseq() -> () error int64;
    ///STUB 335 Blank syscall number
    strict Blank_335() -> () error int64;
    ///STUB 336 Blank syscall number
    strict Blank_336() -> () error int64;
    ///STUB 337 Blank syscall number
    strict Blank_337() -> () error int64;
    ///STUB 338 Blank syscall number
    strict Blank_338() -> () error int64;
    ///STUB 339 Blank syscall number
    strict Blank_339() -> () error int64;
    ///STUB 340 Blank syscall number
    strict Blank_340() -> () error int64;
    ///STUB 341 Blank syscall number
    strict Blank_341() -> () error int64;
    ///STUB 342 Blank syscall number
    strict Blank_342() -> () error int64;
    ///STUB 343 Blank syscall number
    strict Blank_343() -> () error int64;
    ///STUB 344 Blank syscall number
    strict Blank_344() -> () error int64;
    ///STUB 345 Blank syscall number
    strict Blank_345() -> () error int64;
    ///STUB 346 Blank syscall number
    strict Blank_346() -> () error int64;
    ///STUB 347 Blank syscall number
    strict Blank_347() -> () error int64;
    ///STUB 348 Blank syscall number
    strict Blank_348() -> () error int64;
    ///STUB 349 Blank syscall number
    strict Blank_349() -> () error int64;
    ///STUB 350 Blank syscall number
    strict Blank_350() -> () error int64;
    ///STUB 351 Blank syscall number
    strict Blank_351() -> () error int64;
    ///STUB 352 Blank syscall number
    strict Blank_352() -> () error int64;
    ///STUB 353 Blank syscall number
    strict Blank_353() -> () error int64;
    ///STUB 354 Blank syscall number
    strict Blank_354() -> () error int64;
    ///STUB 355 Blank syscall number
    strict Blank_355() -> () error int64;
    ///STUB 356 Blank syscall number
    strict Blank_356() -> () error int64;
    ///STUB 357 Blank syscall number
    strict Blank_357() -> () error int64;
    ///STUB 358 Blank syscall number
    strict Blank_358() -> () error int64;
    ///STUB 359 Blank syscall number
    strict Blank_359() -> () error int64;
    ///STUB 360 Blank syscall number
    strict Blank_360() -> () error int64;
    ///STUB 361 Blank syscall number
    strict Blank_361() -> () error int64;
    ///STUB 362 Blank syscall number
    strict Blank_362() -> () error int64;
    ///STUB 363 Blank syscall number
    strict Blank_363() -> () error int64;
    ///STUB 364 Blank syscall number
    strict Blank_364() -> () error int64;
    ///STUB 365 Blank syscall number
    strict Blank_365() -> () error int64;
    ///STUB 366 Blank syscall number
    strict Blank_366() -> () error int64;
    ///STUB 367 Blank syscall number
    strict Blank_367() -> () error int64;
    ///STUB 368 Blank syscall number
    strict Blank_368() -> () error int64;
    ///STUB 369 Blank syscall number
    strict Blank_369() -> () error int64;
    ///STUB 370 Blank syscall number
    strict Blank_370() -> () error int64;
    ///STUB 371 Blank syscall number
    strict Blank_371() -> () error int64;
    ///STUB 372 Blank syscall number
    strict Blank_372() -> () error int64;
    ///STUB 373 Blank syscall number
    strict Blank_373() -> () error int64;
    ///STUB 374 Blank syscall number
    strict Blank_374() -> () error int64;
    ///STUB 375 Blank syscall number
    strict Blank_375() -> () error int64;
    ///STUB 376 Blank syscall number
    strict Blank_376() -> () error int64;
    ///STUB 377 Blank syscall number
    strict Blank_377() -> () error int64;
    ///STUB 378 Blank syscall number
    strict Blank_378() -> () error int64;
    ///STUB 379 Blank syscall number
    strict Blank_379() -> () error int64;
    ///STUB 380 Blank syscall number
    strict Blank_380() -> () error int64;
    ///STUB 381 Blank syscall number
    strict Blank_381() -> () error int64;
    ///STUB 382 Blank syscall number
    strict Blank_382() -> () error int64;
    ///STUB 383 Blank syscall number
    strict Blank_383() -> () error int64;
    ///STUB 384 Blank syscall number
    strict Blank_384() -> () error int64;
    ///STUB 385 Blank syscall number
    strict Blank_385() -> () error int64;
    ///STUB 386 Blank syscall number
    strict Blank_386() -> () error int64;
    ///STUB 387 Don't use
    strict DontUse_387() -> () error int64;
    ///STUB 388 Don't use
    strict DontUse_388() -> () error int64;
    ///STUB 389 Don't use
    strict DontUse_389() -> () error int64;
    ///STUB 390 Don't use
    strict DontUse_390() -> () error int64;
    ///STUB 391 Don't use
    strict DontUse_391() -> () error int64;
    ///STUB 392 Don't use
    strict DontUse_392() -> () error int64;
    ///STUB 393 Don't use
    strict DontUse_393() -> () error int64;
    ///STUB 394 Don't use
    strict DontUse_394() -> () error int64;
    ///STUB 395 Don't use
    strict DontUse_395() -> () error int64;
    ///STUB 396 Don't use
    strict DontUse_396() -> () error int64;
    ///STUB 397 Don't use
    strict DontUse_397() -> () error int64;
    ///STUB 398 Don't use
    strict DontUse_398() -> () error int64;
    ///STUB 399 Don't use
    strict DontUse_399() -> () error int64;
    ///STUB 400 Don't use
    strict DontUse_400() -> () error int64;
    ///STUB 401 Don't use
    strict DontUse_401() -> () error int64;
    ///STUB 402 Don't use
    strict DontUse_402() -> () error int64;
    ///STUB 403 Don't use
    strict DontUse_403() -> () error int64;
    ///STUB 404 Don't use
    strict DontUse_404() -> () error int64;
    ///STUB 405 Don't use
    strict DontUse_405() -> () error int64;
    ///STUB 406 Don't use
    strict DontUse_406() -> () error int64;
    ///STUB 407 Don't use
    strict DontUse_407() -> () error int64;
    ///STUB 408 Don't use
    strict DontUse_408() -> () error int64;
    ///STUB 409 Don't use
    strict DontUse_409() -> () error int64;
    ///STUB 410 Don't use
    strict DontUse_410() -> () error int64;
    ///STUB 411 Don't use
    strict DontUse_411() -> () error int64;
    ///STUB 412 Don't use
    strict DontUse_412() -> () error int64;
    ///STUB 413 Don't use
    strict DontUse_413() -> () error int64;
    ///STUB 414 Don't use
    strict DontUse_414() -> () error int64;
    ///STUB 415 Don't use
    strict DontUse_415() -> () error int64;
    ///STUB 416 Don't use
    strict DontUse_416() -> () error int64;
    ///STUB 417 Don't use
    strict DontUse_417() -> () error int64;
    ///STUB 418 Don't use
    strict DontUse_418() -> () error int64;
    ///STUB 419 Don't use
    strict DontUse_419() -> () error int64;
    ///STUB 420 Don't use
    strict DontUse_420() -> () error int64;
    ///STUB 421 Don't use
    strict DontUse_421() -> () error int64;
    ///STUB 422 Don't use
    strict DontUse_422() -> () error int64;
    ///STUB 423 Don't use
    strict DontUse_423() -> () error int64;
    ///STUB 424
    strict PidfdSendSignal() -> () error int64;
    ///STUB 425
    strict IoUringSetup() -> () error int64;
    ///STUB 426
    strict IoUringEnter() -> () error int64;
    ///STUB 427
    strict IoUringRegister() -> () error int64;
    ///STUB 428
    strict OpenTree() -> () error int64;
    ///STUB 429
    strict MoveMount() -> () error int64;
    ///STUB 430
    strict Fsopen() -> () error int64;
    ///STUB 431
    strict Fsconfig() -> () error int64;
    ///STUB 432
    strict Fsmount() -> () error int64;
    ///STUB 433
    strict Fspick() -> () error int64;
    ///STUB 434
    strict PidfdOpen() -> () error int64;
    ///STUB 435
    strict Clone3() -> () error int64;
    ///STUB 436
    strict CloseRange() -> () error int64;
    ///STUB 437
    strict Openat2() -> () error int64;
    ///STUB 438
    strict PidfdGetfd() -> () error int64;
    ///STUB 439
    strict Faccessat2() -> () error int64;
    ///STUB 440
    strict ProcessMadvise() -> () error int64;
    ///STUB 441
    strict EpollPwait2() -> () error int64;
    ///STUB 442
    strict MountSetattr() -> () error int64;
    ///STUB 443
    strict QuotactlFd() -> () error int64;
    ///STUB 444
    strict LandlockCreateRuleset() -> () error int64;
    ///STUB 445
    strict LandlockAddRule() -> () error int64;
    ///STUB 446
    strict LandlockRestrictSelf() -> () error int64;
    ///STUB 447
    strict MemfdSecret() -> () error int64;
    ///STUB 448
    strict ProcessMrelease() -> () error int64;
    ///STUB 449
    strict FutexWaitv() -> () error int64;
    ///STUB 450
    strict SetMempolicyHomeNode() -> () error int64;
    ///STUB 451
    strict Cachestat() -> () error int64;
    ///STUB 452
    strict Fchmodat2() -> () error int64;
    ///STUB 453
    strict MapShadowStack() -> () error int64;
    ///STUB 454
    strict FutexWake() -> () error int64;
    ///STUB 455
    strict FutexWait() -> () error int64;
    ///STUB 456
    strict FutexRequeue() -> () error int64;
    ///STUB 457
    strict Statmount() -> () error int64;
    ///STUB 458
    strict Listmount() -> () error int64;
    ///STUB 459
    strict LsmGetSelfAttr() -> () error int64;
    ///STUB 460
    strict LsmSetSelfAttr() -> () error int64;
    ///STUB 461
    strict LsmListModules() -> () error int64;
    ///STUB 462 Blank syscall number
    strict Blank_462() -> () error int64;
    ///STUB 463 Blank syscall number
    strict Blank_463() -> () error int64;
    ///STUB 464 Blank syscall number
    strict Blank_464() -> () error int64;
    ///STUB 465 Blank syscall number
    strict Blank_465() -> () error int64;
    ///STUB 466 Blank syscall number
    strict Blank_466() -> () error int64;
    ///STUB 467 Blank syscall number
    strict Blank_467() -> () error int64;
    ///STUB 468 Blank syscall number
    strict Blank_468() -> () error int64;
    ///STUB 469 Blank syscall number
    strict Blank_469() -> () error int64;
    ///STUB 470 Blank syscall number
    strict Blank_470() -> () error int64;
    ///STUB 471 Blank syscall number
    strict Blank_471() -> () error int64;
    ///STUB 472 Blank syscall number
    strict Blank_472() -> () error int64;
    ///STUB 473 Blank syscall number
    strict Blank_473() -> () error int64;
    ///STUB 474 Blank syscall number
    strict Blank_474() -> () error int64;
    ///STUB 475 Blank syscall number
    strict Blank_475() -> () error int64;
    ///STUB 476 Blank syscall number
    strict Blank_476() -> () error int64;
    ///STUB 477 Blank syscall number
    strict Blank_477() -> () error int64;
    ///STUB 478 Blank syscall number
    strict Blank_478() -> () error int64;
    ///STUB 479 Blank syscall number
    strict Blank_479() -> () error int64;
    ///STUB 480 Blank syscall number
    strict Blank_480() -> () error int64;
    ///STUB 481 Blank syscall number
    strict Blank_481() -> () error int64;
    ///STUB 482 Blank syscall number
    strict Blank_482() -> () error int64;
    ///STUB 483 Blank syscall number
    strict Blank_483() -> () error int64;
    ///STUB 484 Blank syscall number
    strict Blank_484() -> () error int64;
    ///STUB 485 Blank syscall number
    strict Blank_485() -> () error int64;
    ///STUB 486 Blank syscall number
    strict Blank_486() -> () error int64;
    ///STUB 487 Blank syscall number
    strict Blank_487() -> () error int64;
    ///STUB 488 Blank syscall number
    strict Blank_488() -> () error int64;
    ///STUB 489 Blank syscall number
    strict Blank_489() -> () error int64;
    ///STUB 490 Blank syscall number
    strict Blank_490() -> () error int64;
    ///STUB 491 Blank syscall number
    strict Blank_491() -> () error int64;
    ///STUB 492 Blank syscall number
    strict Blank_492() -> () error int64;
    ///STUB 493 Blank syscall number
    strict Blank_493() -> () error int64;
    ///STUB 494 Blank syscall number
    strict Blank_494() -> () error int64;
    ///STUB 495 Blank syscall number
    strict Blank_495() -> () error int64;
    ///STUB 496 Blank syscall number
    strict Blank_496() -> () error int64;
    ///STUB 497 Blank syscall number
    strict Blank_497() -> () error int64;
    ///STUB 498 Blank syscall number
    strict Blank_498() -> () error int64;
    ///STUB 499 Blank syscall number
    strict Blank_499() -> () error int64;
    ///STUB 500 Blank syscall number
    strict Blank_500() -> () error int64;
    ///STUB 501 Blank syscall number
    strict Blank_501() -> () error int64;
    ///STUB 502 Blank syscall number
    strict Blank_502() -> () error int64;
    ///STUB 503 Blank syscall number
    strict Blank_503() -> () error int64;
    ///STUB 504 Blank syscall number
    strict Blank_504() -> () error int64;
    ///STUB 505 Blank syscall number
    strict Blank_505() -> () error int64;
    ///STUB 506 Blank syscall number
    strict Blank_506() -> () error int64;
    ///STUB 507 Blank syscall number
    strict Blank_507() -> () error int64;
    ///STUB 508 Blank syscall number
    strict Blank_508() -> () error int64;
    ///STUB 509 Blank syscall number
    strict Blank_509() -> () error int64;
    ///STUB 510 Blank syscall number
    strict Blank_510() -> () error int64;
    ///STUB 511 Blank syscall number
    strict Blank_511() -> () error int64;
    ///STUB 512
    strict CompatRtSigaction() -> () error int64;
    ///STUB 513
    strict CompatRtSigreturn() -> () error int64;
    ///STUB 514
    strict CompatIoctl() -> () error int64;
    ///STUB 515
    strict CompatReadv() -> () error int64;
    ///STUB 516
    strict CompatWritev() -> () error int64;
    ///STUB 517
    strict CompatRecvfrom() -> () error int64;
    ///STUB 518
    strict CompatSendmsg() -> () error int64;
    ///STUB 519
    strict CompatRecvmsg() -> () error int64;
    ///STUB 520
    strict CompatExecve() -> () error int64;
    ///STUB 521
    strict CompatPtrace() -> () error int64;
    ///STUB 522
    strict CompatRtSigpending() -> () error int64;
    ///STUB 523
    strict CompatRtSigtimedwait() -> () error int64;
    ///STUB 524
    strict CompatRtSigqueueinfo() -> () error int64;
    ///STUB 525
    strict CompatSigaltstack() -> () error int64;
    ///STUB 526
    strict CompatTimerCreate() -> () error int64;
    ///STUB 527
    strict CompatMqNotify() -> () error int64;
    ///STUB 528
    strict CompatKexecLoad() -> () error int64;
    ///STUB 529
    strict CompatWaitid() -> () error int64;
    ///STUB 530
    strict CompatSetRobustList() -> () error int64;
    ///STUB 531
    strict CompatGetRobustList() -> () error int64;
    ///STUB 532
    strict CompatVmsplice() -> () error int64;
    ///STUB 533
    strict CompatMovePages() -> () error int64;
    ///STUB 534
    strict CompatPreadv() -> () error int64;
    ///STUB 535
    strict CompatPwritev() -> () error int64;
    ///STUB 536
    strict CompatRtTgsigqueueinfo() -> () error int64;
    ///STUB 537
    strict CompatRecvmmsg() -> () error int64;
    ///STUB 538
    strict CompatSendmmsg() -> () error int64;
    ///STUB 539
    strict CompatProcessVmReadv() -> () error int64;
    ///STUB 540
    strict CompatProcessVmWritev() -> () error int64;
    ///STUB 541
    strict CompatSetsockopt() -> () error int64;
    ///STUB 542
    strict CompatGetsockopt() -> () error int64;
    ///STUB 543
    strict CompatIoSetup() -> () error int64;
    ///STUB 544
    strict CompatIoSubmit() -> () error int64;
    ///STUB 545
    strict CompatExecveat() -> () error int64;
    ///STUB 546
    strict CompatPreadv2() -> () error int64;
    ///STUB 547
    strict CompatPwritev2() -> () error int64;
};
